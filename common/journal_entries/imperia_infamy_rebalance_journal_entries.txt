je_pariah_neighbour = {
	#A Wolf amongst Sheep
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	group = je_group_crises
	possible = {
		# Pop the journal entry if theres a current pariah with strategic adjacency to you, and you're not the pariah, of course
		hidden_trigger = {
			exists = global_var:current_pariah
			global_var:current_pariah != this
		}
		global_var:current_pariah = {
			has_strategic_adjacency = root
		}
	}
	is_shown_when_inactive = {
		hidden_trigger = {
			exists = global_var:current_pariah
			global_var:current_pariah != this
		}
	}
	immediate = {
		add_modifier = {
			name = modifier_pariah_neighbour
		}
		global_var:current_pariah = {
			save_scope_as = target
		}
	}
	complete = {
		trigger_if = {
			limit = {
				exists = scope:target
			}
			scope:target = {
				infamy < infamy_threshold:pariah
			}
		}
	}
	on_complete = {
		remove_modifier ?= modifier_pariah_neighbour
		remove_variable ?= is_eco_sanctioning_pariah
		remove_variable ?= is_trade_sanctioning_pariah
		remove_variable ?= is_in_coalition_against_pariah
	}
	on_monthly_pulse = {
		# Pariah neighbour events here
		random_events = {
			chance_of_no_event = 75
			1 = imperia_infamy_gp.4	# Choice of army bonus for pariah neighbours
		}
	}
	invalid = {
		trigger_if = {
			limit = {
				exists = scope:target
			}
			NOT = {
				has_strategic_adjacency = scope:target
			}
		}
	}
	on_invalid = {
		remove_modifier ?= modifier_pariah_neighbour
		remove_variable ?= is_eco_sanctioning_pariah
		remove_variable ?= is_trade_sanctioning_pariah
		remove_variable ?= is_in_coalition_against_pariah
	}
	progressbar = no
	should_be_pinned_by_default = yes
}

je_is_pariah = {
	#International Pariah
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	group = je_group_crises
	possible = {
		infamy >= infamy_threshold:pariah
	}
	is_shown_when_inactive = {
		infamy >= infamy_threshold:notorious
	}
	immediate = {
		set_global_variable = {
			name = current_pariah
			value = this
		}
	}
	complete = {
		infamy < 90
	}
	on_complete = {
		remove_modifier ?= modifier_international_pariah
		remove_modifier ?= modifier_pariah_economic_sanctions
		remove_modifier ?= modifier_pariah_trade_sanctions
		if = {
			limit = {
				global_var:current_pariah ?= this
			}
			remove_global_variable ?= current_pariah
		}
	}
	on_monthly_pulse = {
		effect = {
			# If the current pariah gets snapped to oblivion, set the JE owner to be the current pariah
			if = {
				limit = {
					NOT = {
						exists = global_var:current_pariah
					}
				}
				set_global_variable = {
					name = current_pariah
					value = this
				}
			}
			# If economic sanctions gets into play
			if = {
				limit = {
					infamy >= 110
					global_var:current_pariah = this
				}
				every_country = {
					limit = {
						has_journal_entry = je_pariah_neighbour
					}
					trigger_event = {
						# If this event is triggered by non-GPs the effects are scaled down the smaller their rank
						id = imperia_infamy_gp.1
					}
				}
			}
			# If trade sanctions gets into play
			if = {
				limit = {
					infamy >= 130
					global_var:current_pariah = this
				}
				every_country = {
					limit = {
						has_journal_entry = je_pariah_neighbour
					}
					trigger_event = {
						# If this event is triggered by non-GPs the effects are scaled down the smaller their rank
						id = imperia_infamy_gp.2
					}
				}
			}
			if = {
				limit = {
					infamy >= 150
					global_var:current_pariah = this
				}
				# If the pariah is still around, and the infamy is high enough, trigger the coalition invitation event
				every_country = {
					limit = {
						has_journal_entry = je_pariah_neighbour
					}
					trigger_event = {
						id = imperia_infamy_gp.3
					}
				}
			}
		}
		random_events = {
			chance_of_no_event = 75
			1 = imperia_infamy_pariah.1	# Minority freedom fighting
			1 = imperia_infamy_pariah.2	# Capitalists desire better conditions
			1 = imperia_infamy_pariah.3	# Pro-war vs anti-war faction
			1 = imperia_infamy_pariah.4	# Student protests
		}
	}
	progressbar = no
	should_be_pinned_by_default = yes
}
